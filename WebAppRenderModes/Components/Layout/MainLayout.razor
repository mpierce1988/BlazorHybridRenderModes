@using System.Collections
@inherits LayoutComponentBase

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="bb-top-row px-4 d-flex justify-content-end">
            <a href="https://docs.microsoft.com/aspnet/" target="_blank">About</a>
        </div>

        <article class="content px-4">
            <div class="py-2">
                @Body
            </div>
        </article>
    </main>
</div>
@*
<div class="page">
    <div class="sidebar">
        <NavMenu/>
    </div>

    <main>
        <div class="top-row px-4">
            <a href="https://learn.microsoft.com/aspnet/core/" target="_blank">About</a>
        </div>

        <article class="content px-4">
            <div class="container-fluid">
                @Body
            </div>
        </article>
    </main>
</div>
*@


@code {

    private Sidebar? _sidebar;

    private IEnumerable<NavItem> _navItems = new[]
    {
        new NavItem() { Id = "1", Href = "/", IconName = IconName.HouseDoorFill, Text = "Home", Match = NavLinkMatch.All },
        new NavItem() { Id = "2", Href = "/weather", IconName = IconName.Cloud, Text = "Weather" },
        new NavItem() { Id = "3", Href = "/pokemon", IconName = IconName.Backpack, Text = "Pokemon" },
    };

    protected override async Task OnInitializedAsync()
    {
        if(_sidebar is not null)
            await _sidebar.RefreshDataAsync();
        
        await base.OnInitializedAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await _sidebar.RefreshDataAsync(firstRender);
        
        await base.OnAfterRenderAsync(firstRender);
    }

    private async Task<SidebarDataProviderResult> SidebarDataProvider(SidebarDataProviderRequest request)
    {
        return await Task.FromResult(request.ApplyTo(_navItems));
    }

}