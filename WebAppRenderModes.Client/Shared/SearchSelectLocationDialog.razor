@using WebAppRenderModes.Shared.Models.Weather
<Modal @ref="_modal" Title="Search Location" OnHidden="OnClose" Size="ModalSize.Large" 
       Fullscreen="ModalFullscreen.MediumDown" IsVerticallyCentered="true">
    <BodyTemplate>
        <EditForm Model="_inputModel" OnSubmit="SearchLocation">
            <div class="mb-3">
                <label for="location">Enter Location</label>
                <InputText @bind-Value="_inputModel.SearchText" class="form-control" id="location"/>
            </div>
            <Button Type="ButtonType.Submit" Color="ButtonColor.Primary">Search</Button>
        </EditForm>
        <br/>
        @if (_errorMessage is not null)
        {
            <Callout Color="CalloutColor.Danger">
                @_errorMessage
            </Callout>
        }
        
        @if (_isLoading)
        {
            <Callout Color="CalloutColor.Info">
                Loading...
            </Callout>
        }
        <p>Locations Found: @(Locations.Count)</p>

        @if (Locations.Count > 0)
        {
            <Grid @ref="_grid" TItem="Location" Class="table table-hover table-bordered table-striped" DataProvider="LocationsDataProvider" 
                  AllowFiltering="true" AllowPaging="true" PageSize="20" AllowSorting="true" Responsive="true" >
                <GridColumns>
                    <GridColumn TItem="Location" HeaderText="Name" PropertyName="Name" SortKeySelector="location => location.Name">
                        @context.Name
                    </GridColumn>
                    <GridColumn TItem="Location" HeaderText="Country Code" PropertyName="CountryCode" SortKeySelector="location => location.CountryCode">
                        @context.CountryCode
                    </GridColumn>
                    <GridColumn TItem="Location" HeaderText="Latitude" PropertyName="Latitude" SortKeySelector="location => location.Latitude">
                        @context.Latitude
                    </GridColumn>
                    <GridColumn TItem="Location" HeaderText="Longitude" PropertyName="Longitude" SortKeySelector="location => location.Longitude">
                        @context.Longitude
                    </GridColumn>
                    <GridColumn TItem="Location" HeaderText="" PropertyName="">
                        <Button Color="ButtonColor.Primary" Outline="@true" @onclick="async () => await SelectLocation(context)">
                            Select @context.Name
                        </Button>
                    </GridColumn>
                </GridColumns>
            </Grid>
            
            @*    
        <table class="table">
            <thead>
            <tr>
                <th scope="col">Name</th>
                <th scope="col">Country Code</th>
                <th scope="col">Latitude</th>
                <th scope="col">Longitude</th>
                <th scope="col"></th>
            </tr>
            </thead>
            <tbody>
            @foreach (Location location in Locations)
            {
            <tr>
                <th scope="row">@location.Name</th>
                <td>@location.CountryCode</td>
                <td>@location.Latitude</td>
                <td>@location.Longitude</td>
                <td>
                    <button class="btn btn-outline-primary" @onclick="async () => await SelectLocation(location)">
                        Select @location.Name
                    </button></td>
            </tr>
            }
            </tbody>
        </table>
        *@
        }
    </BodyTemplate>
</Modal>